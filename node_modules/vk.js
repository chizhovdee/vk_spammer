/**
*  VK api with node webkit ui
*
*/

var app_id = 4275483;

var scope = 'friends,groups,messages';

var gui = global.window.nwDispatcher.requireNwGui();
var url = require('url');
var request = require('request');

module.exports.authorize = function (login, pass, callback) {
  var currentWin = gui.Window.get(); // get current window

  var error;

  var authResult;
  var authUrl = "https://oauth.vk.com/authorize"
  authUrl += "?client_id=" + app_id
  authUrl += "&scope=" + scope ;
  authUrl += "&display=popup";
  authUrl += "&redirect_uri=http://oauth.vk.com/blank.html&response_type=token";

  var windowOptions = {
    position: 'center',
    width: 500,
    height: 400,
    focus: true,
    show: true
  }

  var newWin = gui.Window.open(authUrl, windowOptions); // open and get new window to authorization on Vk.com

  // callbacks
  var onWinLoaded = function(){
    var parsedHash;
    var parsedUlr = url.parse(this.window.location.href, true);

    currentWin.window.console.log(parsedUlr);

    if(/#access_token=*/.test(parsedUlr.hash)){
      newWin.close();

      parsedHash = parsedUlr.hash.slice(1, parsedUlr.hash.length).split('&');
      authResult = _.object(_.map(parsedHash, function(s){ return s.split('=')}));

    } else if(parsedUlr.query.email && parsedUlr.query.m == 4) {
      error = {
        type: 'auth_failure',
        message: 'Не правильный логин или пароль для ' + login
      };

      newWin.close();

    } else if(parsedUlr.query.act == 'blocked') {
      error = {
        type: 'auth_failure',
        message: 'Пользователь заблокирован ' + login
      };

      newWin.close();

    } else if(parsedUlr.query.__q_hash) { // запрос на права

      newWin.window.document.getElementById("install_allow").click();

    } else {
      try{
        newWin.window.document.getElementsByName("email")[0].value = login;
        newWin.window.document.getElementsByName("pass")[0].value = pass;
        newWin.window.document.getElementById("login_submit").submit.click();
      } catch (e) {
        error = {
          type: 'unkown',
          message: e
        }

        newWin.close();
      }

    }
  }

  newWin.on('loaded', onWinLoaded);

  newWin.once('closed', function(){
    newWin.removeListener('loaded', onWinLoaded);
    callback(error, authResult);
  });
}


module.exports.logOut = function(callback){
  var hashed = 0;
  var error;
  var parsedUlr;

  var windowOptions = {
    position: 'center',
    width: 500,
    height: 400,
    focus: true,
    show: true
  }

  var currentWin = gui.Window.get(); // get current window
  var newWin = gui.Window.open('http://vk.com', windowOptions); // open and get new window to authorization on Vk.com

  var onWinLoaded = function (){
    parsedUlr = url.parse(this.window.location.href, true);

    if(parsedUlr.query.hash) {
      hashed += 1;

    } else {
      var logout_link = newWin.window.document.getElementById('logout_link');

      if(logout_link) {
        logout_link.click();

      } else {
        newWin.close();
      }
    }

    if(hashed == 2){
      newWin.close();
    }
  }

  newWin.on('loaded', onWinLoaded);

  newWin.once('closed', function(){
    newWin.removeListener('loaded', onWinLoaded);

    callback(error, parsedUlr.query.hash);
  });
}


/**
*  Метод для запросов к api vkontakte
*/

module.exports.request = function (method, params, callback){
  request({
    url: 'https://api.vk.com/method/' + method,
    qs: params
  }, function (error, response, body) {
    if(error) throw error;

    try{
      body = JSON.parse(body);

    } catch (e) {

      window.console.log(error);
      window.console.log(response);
      window.console.log(body);
    }

    callback(body.error, body.response);

  });
}